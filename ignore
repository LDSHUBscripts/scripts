local G = getgenv()
G.Key = "SAaRlAiS_aBhImRaAdHG2"

local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/RobSilas/lds-hub/main/library.txt"))()

local window = lib:start("Arm Wrestle Simulator", "3.0 Testes", true)

local tabEvent = window:addTab("Event Christmas")

tabEvent:addToggle("Sever Hopper for Event!", "By activating this option, every time the event ends it will automatically change servers, if you activate Save Settings it will automatically search for a server with the active event! enable other options for better performance","big", true, function(value)
	while G.Settings["Sever Hopper for Event!"] do
		wait()

		local breakables = workspace.GameObjects.Breakables
		local plr = game.Players.LocalPlayer
		local char = plr.Character
		local x = true	

		if x then
			
			local t = workspace.Zones["1"].Interactables.Teleports.EscapeToChristmas.Part
			local f = t.Attachment.ProximityPrompt
			
			char:SetPrimaryPartCFrame(t.CFrame)

			local function fireproximityprompt(Obj, Amount, Skip)
				if Obj.ClassName == "ProximityPrompt" then 
					Amount = Amount or 1
					
					local PromptTime = Obj.HoldDuration
					
					if Skip then 
						Obj.HoldDuration = 0
					end
					
					for i = 1, Amount do 
						
						Obj:InputHoldBegin()
						
						if not Skip then 
							wait(Obj.HoldDuration)
						end
						
						Obj:InputHoldEnd()
					end
					
					Obj.HoldDuration = PromptTime
				else 
					
					error("userdata<ProximityPrompt> expected")
				end
			end
			wait(0.5)
			fireproximityprompt(f, 2, false)
			
		end
		
		if #breakables:GetChildren() == 0 then
			local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua"))()
			module:Teleport(game.PlaceId)
			else
			x = false
			
			while G.Settings["Sever Hopper for Event!"] do
				wait()
				if #breakables:GetChildren() == 0 then
					local module = loadstring(game:HttpGet("https://raw.githubusercontent.com/LeoKholYt/roblox/main/lk_serverhop.lua"))()
					module:Teleport(game.PlaceId)
				end
				
			end
		end
	end

end)

tabEvent:addToggle("Auto Farm Snowmans", "By activating this option, when there are snowmen on the map it will automatically break them","big", false, function(value)
	while G.Settings["Auto Farm Snowmans"] do
		
		wait(1)
		local path = workspace.GameObjects.Breakables

		for _, snowmans in ipairs(path:GetChildren()) do
			local plr = game.Players.LocalPlayer
			local char = plr.Character

			if char then
				
				if snowmans.MeshId == "rbxassetid://15562917980" then
				local name = snowmans.Name
				local tp = snowmans.CFrame

				char:SetPrimaryPartCFrame(tp)

				for i = 1, 50 do
					if path:FindFirstChild(name) then
						local args = {
							[1] = name
						}
						
						game:GetService("ReplicatedStorage").Packages.Knit.Services.SnowstormService.RF.HitBreakable:InvokeServer(unpack(args))
						wait(0.1)
					else
						break
					end
				end
			end
		end
	end
	end
end)

tabEvent:addToggle("Auto Farm Candcane", "By activating this option, when there are Candcane on the map it will automatically break them","big", false, function(value)
	while G.Settings["Auto Farm Candcane"] do

		wait(1)
		local path = workspace.GameObjects.Breakables

		for _, snowmans in ipairs(path:GetChildren()) do
			local plr = game.Players.LocalPlayer
			local char = plr.Character

			if char then
				
				if snowmans.MeshId == "rbxassetid://15562918194" then
				local name = snowmans.Name
				local tp = snowmans.CFrame

				char:SetPrimaryPartCFrame(tp)

				for i = 1, 50 do
					if path:FindFirstChild(name) then
						local args = {
							[1] = name
						}
						
						game:GetService("ReplicatedStorage").Packages.Knit.Services.SnowstormService.RF.HitBreakable:InvokeServer(unpack(args))

						wait(0.1)
						else
							break
						end
					end
				end
			end
		end
	end
end)

local ComboUntil = tabEvent:addCombo("Select Thing", "Select one of the options (This section updates automatically!)", {"Snowman", "Candcane"})

tabEvent:addToggle("Farm Santa Until (Select!)", "By activating this option, you will farm Santa when there is no (Snowman or Candcane you need select!), when he has snowman he will start breaking them","big", false, function(value)
	local breakables = workspace.GameObjects.Breakables

	while G.Settings["Farm Santa Until (Select!)"] do
		wait()

		local comboValue = ComboUntil:getValue()

		if #breakables:GetChildren() == 0 then
			local args = {
				[1] = "SantaBoss",
				[2] = workspace.Zones["1"].Interactables.ArmWrestling.NPC.SantaBoss.Table,
				[3] = "1"
			}

			game:GetService("ReplicatedStorage").Packages.Knit.Services.ArmWrestleService.RE.onEnterNPCTable:FireServer(unpack(args))
		else
			local targetMeshId

			if comboValue == "Candcane" then
				targetMeshId = "rbxassetid://15562918194"
			elseif comboValue == "Snowman" then
				targetMeshId = "rbxassetid://15562917980"
			end

			for _, breakable in ipairs(breakables:GetChildren()) do
				local plr = game.Players.LocalPlayer
				local char = plr.Character

				if char and breakable.MeshId == targetMeshId then
					local name = breakable.Name
					local tp = breakable.CFrame

					char:SetPrimaryPartCFrame(tp)

					for i = 1, 500 do
						if breakables:FindFirstChild(name) then
							local args = { [1] = name }

							game:GetService("ReplicatedStorage").Packages.Knit.Services.SnowstormService.RF.HitBreakable:InvokeServer(unpack(args))
							wait(0.05)
						else
							break
						end
					end
				end
			end
		end
	end

end)

tabEvent:addToggle("Auto Tap Santa", "By activating the option you will start clicking to kill the Santa automatically","big", false, function(value)
	while G.Settings["Auto Tap Santa"] do
		wait()
		game:GetService("ReplicatedStorage").Packages.Knit.Services.ArmWrestleService.RE.onClickRequest:FireServer()

	end	
end)

tabEvent:addToggle("Auto Farm Santa", "By activating the option you will start killing the santa","big", false, function(value)
	while G.Settings["Auto Farm Santa"] do
		wait()
	local args = {
		[1] = "SantaBoss",
		[2] = workspace.Zones["1"].Interactables.ArmWrestling.NPC.SantaBoss.Table,
		[3] = "1"
	}

	game:GetService("ReplicatedStorage").Packages.Knit.Services.ArmWrestleService.RE.onEnterNPCTable:FireServer(unpack(args))
	end	
end)

tabEvent:addToggle("Auto Egg Christmas", "By activating this option you will start opening the available eggs (8x)","big", false, function(value)
	while G.Settings["Auto Egg Christmas"] do
	local args = {
		[1] = 8,
	}
	
	game:GetService("ReplicatedStorage").Packages.Knit.Services.EventService.RF.ClaimEgg:InvokeServer(unpack(args))
	end
end)

tabEvent:addToggle("Remove Egg Animation", "Activating this option will remove the animation of opening eggs","big", false, function(value)
	local plr = game.Players.LocalPlayer
	local gui = plr.PlayerGui.OpenerUI

	if G.Settings["Remove Egg Animation"] then
		gui.Enabled = false
	else
		gui.Enabled = true
	end
end)

