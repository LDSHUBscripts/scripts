local G = getgenv()
G.Key = "SAaRlAiS_aBhImRaAdHG2"

local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/RobSilas/lds-hub/main/library.txt"))()

local window = lib:start("Pet Simulator 99", "1.0 Global", true)

local tabAutoFarm = window:addTab("Auto Farm")
local tabAutoEgg = window:addTab("Auto Egg")
local tabAutoBuy = window:addTab("Auto Buy")
local tabAutoCollect = window:addTab("Auto Collect")
local tabAutoGame = window:addTab("Auto Games")
local tabBoostItens = window:addTab("Boost Itens")
local tabMachines = window:addTab("Machines")
local tabTeleport = window:addTab("Teleport")
local tabMisc = window:addTab("Misc")

-- Auto Farm 

local AreaListAF = tabAutoFarm:addCombo("Select Area", "Select one of the options (This section updates automatically!)", {"area"})
local ModeListAF = tabAutoFarm:addCombo("Select Mode", "Select one of the options (This section updates automatically!)", {"modo"})

tabAutoFarm:addToggle("Auto Farm (Area and Mode)", "By activating this option, you will automatically start farming coins in the selected area!","big", false, function(value) 
	
end)

-- Auto Egg
local pathEgg = game:GetService("ReplicatedStorage").__DIRECTORY.Eggs["Zone Eggs"]
local eggsTable = {}

for i, v in pairs(pathEgg:GetChildren()) do
	local originalName = v.Name
	local trimmedName = originalName:gsub("%d+ | ", "") -- Remove o "1 | " do nome do egg
	table.insert(eggsTable, trimmedName)
end

local EggsListAG = tabAutoEgg:addCombo("Select Egg", "Select one of the options (This section updates automatically!)", eggsTable)

tabAutoEgg:addToggle("Auto Egg", "","big", false, function(value) 
	local text = game:GetService("Players").LocalPlayer.PlayerGui._MACHINES.EggSlotsMachine.Frame.Slots.Items.Title.Remaining.Text
	local number = tonumber(string.match(text, "(%d+)/%d+"))
	
	local args = {
		[1] = EggsListAG:getValue(),
		[2] = number
	}

	game:GetService("ReplicatedStorage").Network.Eggs_RequestPurchase:InvokeServer(unpack(args))
end)

-- Machines
local tier = nil

local ModeMachines = tabMachines:addCombo("Select Mode", "Select one of the options (This section updates automatically!)", {"All Machines", "Only Potions", "Only Enchants", "Only Fruits"})

tabMachines:addSlider("Amount Item", "x", 1, 3, function(value)
	tier = value
end)

tabMachines:addToggle("Auto Buy Machines", "x","big", false, function(value) 
	-- variaveis:
	local Value = ModeMachines:getValue()
	local machines = {
		potions = {
			"PotionVendingMachine1",
			"PotionVendingMachine2",
		},
		Enchants = {
			"EnchantVendingMachine1",
			"EnchantVendingMachine2",
		},
		Fruits = {
			"FruitVendingMachine1",
			"FruitVendingMachine2",
		}
	}
	
	local function BuyMachines(Machine, Tier)
		local args = {
			[1] = Machine,
			[2] = Tier
		}

		game:GetService("ReplicatedStorage").Network.VendingMachines_Purchase:InvokeServer(unpack(args))
	end
	
	while G.Settings["Auto Buy Machines"] do
		wait()
		if Value then
			if Value == "All Machines" then
				for category, machinesList in pairs(machines) do
					for _, machine in ipairs(machinesList) do
						BuyMachines(machine, tier)
					end
				end
			elseif Value == "Only Potions" then
				for _, machine in ipairs(machines["potions"]) do
					BuyMachines(machine, tier)
				end
			elseif Value == "Only Enchants" then
				for _, machine in ipairs(machines["Enchants"]) do
					BuyMachines(machine, tier)
				end
			elseif Value == "Only Fruits" then
				for _, machine in ipairs(machines["Fruits"]) do
					BuyMachines(machine, tier)
				end
			end
		else
			Value = "All Machines"
		end
	end
end)
