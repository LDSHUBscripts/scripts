-- Variaveis

local zonePath = game:GetService("Workspace").Map["92 | Cloud Forest"]

local Lib = require(game.ReplicatedStorage.Library.Client)
local G = getgenv()
G.BestFarm = true
G.Fishing = false

local RS = game:GetService("ReplicatedStorage")

local savemodule = require(RS.Library.Client.Save)
local FileSave = savemodule.Get(game.Players.LocalPlayer)
local HP = FileSave.HiddenPresents
local Egg = FileSave.EggSlotsPurchased

local plr = game.Players.LocalPlayer
local char = plr.Character

local ArlFind = {}

-- teleport to fishing

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = zonePath.PERSISTENT.Teleport.CFrame
	
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = workspace.__THINGS.Instances:WaitForChild("AdvancedFishing").Teleports.Enter.CFrame

workspace.__THINGS.__INSTANCE_CONTAINER.Active:WaitForChild("AdvancedFishing")

game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(1450.4469, 62.8209801, -4451.35938)) * CFrame.new(0, 5, 0)


spawn(function()
	while G.BestFarm do
		wait()
		if not G.Fishing then
			G.Fishing = true

			local path = workspace.__THINGS.__INSTANCE_CONTAINER.Active.AdvancedFishing.Water.Layer4

			local tamanhoDoPath = path.Size/30

			local posicaoAleatoria = path.Position + Vector3.new(
				math.random() * tamanhoDoPath.X,
				math.random() * tamanhoDoPath.Y,
				math.random() * tamanhoDoPath.Z
			)

			local args = {
				[1] = "AdvancedFishing",
				[2] = "RequestCast",
				[3] = posicaoAleatoria
			}

			game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))
			task.wait(3.7)
			game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool").Rod:WaitForChild("FishingLine").Attachment0.Parent:GetPropertyChangedSignal("CFrame"):Wait()
			task.wait(0.5)	
			local args = {
				[1] = "AdvancedFishing",
				[2] = "RequestReel"
			}

			game:GetService("ReplicatedStorage").Network.Instancing_FireCustomFromClient:FireServer(unpack(args))

			repeat
				local args = {
					[1] = "AdvancedFishing",
					[2] = "Clicked"
				}

				game:GetService("ReplicatedStorage").Network.Instancing_InvokeCustomFromClient:InvokeServer(unpack(args))
				wait(0.1)
			until not game.Players.LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild("Rod"):FindFirstChild("FishingLine")
			wait(0.3)
			G.Fishing = false	
		end
	end
end)

-- Plataforma

local PartEgg = Instance.new("Part")
PartEgg.Size = Vector3.new(15, 1, 15)
PartEgg.Parent = workspace
PartEgg.Anchored = true

local adjustedCFrame = CFrame.new(-24.4168987, 15.2850189, -313.273743, -4.37113883e-08, 0, 1, 0, 1, 0, -1, 0, -4.37113883e-08) * CFrame.Angles(0, math.rad(90), 0)

PartEgg.CFrame = adjustedCFrame

char:SetPrimaryPartCFrame(PartEgg.CFrame * CFrame.new(Vector3.new(0, 5, 0)))

-- auto hidden present
spawn(function()
	while G.BestFarm do 
		wait(0.5)
		for _, Data in pairs(HP) do
			local ID = Data.ID

			if not ArlFind[ID] then
				local args = {
					[1] = ID
				}

				game:GetService("ReplicatedStorage").Network["Hidden Presents: Found"]:InvokeServer(unpack(args))

				ArlFind[ID] = true
			end
		end
	end
end)

-- Remove Egg Animation

local Eggs = game.Players.LocalPlayer.PlayerScripts.Scripts.Game['Egg Opening Frontend']getsenv(Eggs).PlayEggAnimation = function() return end

-- Auto Egg

spawn(function()
	while wait(0.5) and G.BestFarm do
		local args = {
			[1] = "Rainbow Egg",
			[2] = Egg
		}

		game:GetService("ReplicatedStorage").Network.Eggs_RequestPurchase:InvokeServer(unpack(args))
	end
end)

-- Anti AFK

local bb=game:service'VirtualUser'
game:service'Players'.LocalPlayer.Idled:connect(function()
	bb:CaptureController()bb:ClickButton2(Vector2.new())
end)

-- No Render

RunService = game:GetService("RunService")
RunService:Set3dRenderingEnabled(false) 

